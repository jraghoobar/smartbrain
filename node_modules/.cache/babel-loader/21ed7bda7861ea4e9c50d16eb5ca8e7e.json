{"ast":null,"code":"var _jsxFileName = \"/Users/JacobRaghoobar 1/Desktop/WEBSITES/smart-brain/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '85fafb55047a487d815c5a37dc09da54'\n});\nconst particlesOptinos = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    // email: '',\n    id: '',\n    name: '',\n    // password: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box; // when inserting the image in FaceRecognition.js, we give it id of \n      // inputimage so we can get it here\n\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        // clarifaiFace.left_col is a percentage of the image width\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      // console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); // app.models.predict(\n      //   Clarifai.FACE_DETECT_MODEL, \n      //   this.state.input).then(\n      //   function(response) {\n      //     // do something with response\n      //     // console.log(response);\n      //     // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      //     this.calculateFaceLocation(response);\n      //   },\n      //   function(err) {\n      //     // there was an error\n      //   }\n      // );\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        // email: '',\n        id: '',\n        name: '',\n        // password: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptinos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), \");\", React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: this.state.isSignedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), this.state.route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })) : this.state.route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/JacobRaghoobar 1/Desktop/WEBSITES/smart-brain/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","Logo","Rank","ImageLinkForm","FaceRecognition","app","App","apiKey","particlesOptinos","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n apiKey: '85fafb55047a487d815c5a37dc09da54'\n});\n\nconst particlesOptinos = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState ={\n  input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        // email: '',\n        id: '',\n        name: '',\n        // password: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        // email: '',\n        id: '',\n        name: '',\n        // password: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  // componentDidMount() {\n  //   fetch('http://localhost:300')\n  //     .then(response => response.json())\n  //     .then(console.log)\n  // }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\n    // when inserting the image in FaceRecognition.js, we give it id of \n    // inputimage so we can get it here\n    const image = document.getElementById('inputimage');\n\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      // clarifaiFace.left_col is a percentage of the image width\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  } \n\n\n\n  displayFaceBox = (box) => {\n    // console.log(box);\n    this.setState({box: box});\n  } \n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n\n    // app.models.predict(\n    //   Clarifai.FACE_DETECT_MODEL, \n    //   this.state.input).then(\n    //   function(response) {\n    //     // do something with response\n    //     // console.log(response);\n    //     // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        \n    //     this.calculateFaceLocation(response);\n    //   },\n    //   function(err) {\n    //     // there was an error\n    //   }\n    // );\n\n\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n            \n          })\n        })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n      \n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false});\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n                  params={particlesOptinos} />\n          );\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n        { this.state.route === 'home' \n            ? <div>\n                <Logo />\n                <Rank name={this.state.user.name}\n                      entries={this.state.user.entries} />\n                <ImageLinkForm \n                  onInputChange={this.onInputChange} \n                  onButtonSubmit={this.onButtonSubmit}/>\n                <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n              </div>\n\n            : (\n                this.state.route === 'signin'\n                ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              )\n        }\n          { // <Logo />\n        // <ImageLinkForm />\n        // <FaceRecognition />\n        } \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}